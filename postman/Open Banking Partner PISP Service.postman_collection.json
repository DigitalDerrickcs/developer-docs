{
	"info": {
		"_postman_id": "c0695cb1-8767-4a50-8410-4b54958b1f0f",
		"name": "Open Banking Partner PISP Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Partner Self Hosted Flow",
			"item": [
				{
					"name": "organisations",
					"item": [
						{
							"name": "List Organisations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4bee8a2-49f3-4a3a-b842-91a4c3a5b963",
										"exec": [
											"pm.environment.set(\"merchantId\", JSON.parse(responseBody).data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{partnerApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organisations"
									],
									"query": [
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										}
									]
								},
								"description": "The endpoint allows to list Organisations in requesting Organisation hierarchy"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"40000\",\n \"returnDescription\": \"Input validation errors\",\n \"details\": [\n  {\n   \"code\": \"50004\",\n   \"field\": \"pagesize\",\n   \"description\": \"Max page size is exceeded\",\n   \"resourceUri\": null\n  }\n ]\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/organisations\",\n \"data\": [\n  {\n   \"id\": \"j29p3kpabx\",\n   \"uri\": \"/organisations/j29p3kpabx\",\n   \"name\": \"Originator Name\",\n   \"countryOfRegistration\": \"IE\",\n   \"code\": \"ORNA\",\n   \"registeredNumber\": \"32342\",\n   \"vatNumber\": null,\n   \"language\": \"en\",\n   \"address\": {\n    \"line1\": \"Address\",\n    \"line2\": null,\n    \"postCode\": null,\n    \"state\": null,\n    \"town\": \"Town\",\n    \"country\": \"IE\"\n   },\n   \"contact\": {\n    \"firstName\": \"First Name\",\n    \"lastName\": \"Last Name\",\n    \"telephone\": \"21242124\",\n    \"mobile\": null,\n    \"fax\": null,\n    \"email1\": \"email@example.com\",\n    \"email2\": null,\n    \"title\": \"Mr\",\n    \"position\": \"None\",\n    \"contactType\": [\n     \"PRIMARY\"\n    ],\n    \"emailNotification\": false\n   },\n   \"links\": []\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 20,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"40000\",\n \"returnDescription\": \"Input validation errors\",\n \"details\": [\n  {\n   \"code\": \"50003\",\n   \"field\": \"pagenumber\",\n   \"description\": \"Page Number is invalid\",\n   \"resourceUri\": null\n  },\n  {\n   \"code\": \"50005\",\n   \"field\": \"pagesize\",\n   \"description\": \"Page Size is invalid\",\n   \"resourceUri\": null\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Request Access Token for Organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29ad1161-fe6e-4d94-abf6-94329d54ba06",
										"exec": [
											"pm.environment.set(\"bearerToken\", JSON.parse(responseBody).data.accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{partnerApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"bankadmin\",\n        \"openbanking_pisp\",\n        \"admin\"\n    ],\n    \"expiresIn\": 31556926\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organisations",
										":encodedOrganisationId",
										"tokens"
									],
									"variable": [
										{
											"key": "encodedOrganisationId",
											"value": "{{merchantId}}",
											"description": "Encoded Organisation Id returned by List Organisations endpoint."
										}
									]
								},
								"description": "This endpoing allows an organisation to exchange an API Key for an OAuth Access Token"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"organisations/ybo8zd8j2q/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n \"data\": {\n  \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"uri\": \"organisations/ybo8zd8j2q/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpcF9maWx0ZXJpbmciOmZhbHNlLCJhdWQiOlsiZ2siLCJ3ZWJob29rcyIsInBpIiwicm1zIiwiaW5zdGFudCJdLCJvcmlnaW5hdG9yX29yZ19pZCI6ImoyOXAza3BhYngiLCJ1c2VyX2lkIjoid3FqMjlubXhuZSIsInVzZXJfbmFtZSI6InN5c3RlbSIsIm9yZ19pZCI6IiIsInNjb3BlIjpbInVzZXJkaXJlY3QiXSwiZXhwIjoxNTQ0NTM5MzQ3LCJhdXRob3JpdGllcyI6WyJGTV9CdWxrX0NhbmNlbCIsIkJhbmtfVXBkYXRlIiwiSW5zdGFudF9QYXltZW50c19DcmVhdGVfUmVzZXJ2YXRpb24iLCJDcmVkaXRUcmFuc2Zlcl9SZWplY3QiLCJHTE9CQUxfU0VBUkNIIiwiU2NoZW1lX0FkZFVwZGF0ZSIsIkJhbmtHcm91cF9MaXN0Iiwid2ViaG9va19hZG1pbiIsIkN1c3RvbWVyX0VkaXQiLCJCYW5rX0FwcHJvdmFsX0VkaXRvciIsIkFkbWluX1VzZXJfQWN0aXZhdGUiLCJCYW5rX1ZpZXciLCJDcmVkaXRvckFjY291bnRfQWRkIiwiQ3JlZGl0b3JBY2NvdW50X0xpc3RWaWV3IiwiRk1fRUJBX1NlYXJjaCIsIkJhbmtfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0VkaXRTZXR0aW5ncyIsIkNyZWRpdG9yX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX1NlYXJjaCIsIkFQUFJPVkFMX1ZJRVdFUiIsIk51YXBheV9BcHBfTGlzdF9BY2NvdW50cyIsIkJlbmVmaWNpYXJ5X0FkZCIsIkNyZWRpdG9yX1NlY3VyaXR5X1ZpZXciLCJCaWNfUmVhY2hhYmlsaXR5X1ZhbGlkYXRpb24iLCJDcmVkaXRvcl9Db250YWN0X0FkZEVkaXQiLCJCYW5rX1VzZXJfQWN0aXZhdGUiLCJGTV9NYW5kYXRlX1NlYXJjaCIsIkZNX0REX1JfVHJhbnNhY3Rpb25fVmlldyIsIkNvbnRhY3RzX0xpc3RWaWV3QWRkRWRpdCIsIkRlYnRvck1hbmRhdGVfQmxvY2tBY3RpdmF0ZSIsIk51YXBheV9BcHBfTGlzdF9UcmFuc2FjdGlvbnMiLCJCYW5rX1VzZXJfRWRpdCIsIkZNX01hbmRhdGVfRmlsZV9VcGxvYWQiLCJPcmdVbml0X1ZpZXciLCJCYW5rR3JvdXBfV1NfVXNlcl9MaXN0Vmlld0FkZEVkaXQiLCJDcmVkaXRvck1hbmRhdGVfRERfU2VhcmNoIiwiQ2xpZW50X0xhbmdfVmlldyIsIkZNX0JhdGNoX1JldmVyc2UiLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWN0aXZhdGUiLCJPcmdVbml0X0xpc3QiLCJGTV9ERF9WaWV3IiwiQmFua0dyb3VwX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9Vc2VyX1ZpZXciLCJWYWxpZGF0ZV9BY2NvdW50IiwiQ2xhaW1fTGlzdFZpZXciLCJDbGllbnRfTGlzdCIsIkNyZWRpdG9yQWNjb3VudF9FZGl0IiwiQU1MX1NlcnZpY2UiLCJDcmVkaXRvcl9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVkaXRvck1hbmRhdGVfTm9FZGl0QWNjb3VudERldGFpbHMiLCJGTV9CdWxrX1Jldm9rZSIsIkNyZWRpdG9yTWFuZGF0ZV9FZGl0IiwiQ2xpZW50X0FwcHJvdmFsX0VkaXRvciIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfTGlzdFZpZXciLCJCZW5lZmljaWFyeUFjY291bnRfTGlzdFZpZXdBZGRFZGl0IiwiQ3JlZGl0b3JfQ29udGFjdF9MaXN0VmlldyIsIlJvb3RQYXltZW50U2NoZW1lX0xpc3RWaWV3QWRkRWRpdCIsIkFQUFJPVkFMX0VESVRPUiIsIk9yZ1VuaXRfQWRkVXBkYXRlIiwiQmFua0dyb3VwX0FwcHJvdmFsX0VkaXRvciIsIkZNX0JhdGNoX0NhbmNlbCIsIkZNX0REX0xpc3RCYXRjaGVzIiwiUm9sZV9Bc3NpZ25tZW50IiwiQ3JlZGl0VHJhbnNmZXJfQWRkIiwiQ2xpZW50X0FkZCIsIlNjaGVtZV9MaW1pdHNfVmlldyIsIkZNX0JhdGNoX1ZpZXciLCJGTV9UcmFuc2FjdGlvbl9SZXZva2UiLCJNYW5kYXRlQ29sbGVjdGlvbl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfRXhwb3J0IiwiQmFua19FeHBvcnRUaW1lc19WaWV3IiwiQ3JlZGl0b3JTY2hlbWVfQ29udGFjdF9SZW1vdmUiLCJGTV9QYWluMl9GaWxlX0V4cG9ydCIsIkNTTV9MaXN0IiwiQ1NNX1ZpZXciLCJBZ2VuY3lCYW5rX1ZpZXciLCJDbGllbnRfRWRpdExpbWl0cyIsIkZNX0J1bGtfUmV2ZXJzZSIsIkJhbmtfVXNlcl9BZGQiLCJDcmVkaXRvck1hbmRhdGVfQ2FuY2VsIiwiQWdlbmN5QmFua19MaXN0IiwiRk1fQmF0Y2hfUmV2b2tlIiwiU2VhcmNoX1Bvc3RpbmciLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9BZGQiLCJCYW5rR3JvdXBfQXBwcm92YWxfVmlld2VyIiwiQmFua0dyb3VwX1NlY3VyaXR5X0VkaXQiLCJSb2xlX0FkZEVkaXQiLCJPcmlnaW5hdG9yX0V4cG9ydFRpbWVzX0VkaXQiLCJEZWJ0b3JBY2NvdW50X0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfTGlzdCIsIkFkbWluX1VzZXJfQWRkIiwiUm9sZV9MaXN0VmlldyIsIkZNX0NUX1NlYXJjaCIsIkNyZWRpdG9yX1VzZXJfTGlzdCIsIkNyZWRpdFRyYW5zZmVyX0VkaXQiLCJBZG1pbl9Vc2VyX0VkaXQiLCJGTV9NYW5kYXRlX0ZpbGVfU2VhcmNoIiwiQmFua0dyb3VwX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX0NhbmNlbCIsIkNyZWRpdG9yX1VzZXJfQWN0aXZhdGUiLCJDcmVkaXRvcl9Vc2VyX1ZpZXciLCJDcmVkaXRUcmFuc2Zlcl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfUmV2b2tlIiwiQ2xpZW50X0VkaXQiLCJTY2hlbWVfTGlzdCIsIkRpcmVjdERlYml0X0xpc3RWaWV3IiwiU2NoZW1lX1ZpZXciLCJCYW5rX0FkZCIsIkFnZW5jeUJhbmtfQWRkVXBkYXRlIiwiQ2xpZW50X0FwcHJvdmFsX1ZpZXdlciIsIlZpZXdfT3JpZ2luYXRvcl9SZXBvcnRzIiwiRGVidG9yTWFuZGF0ZV9MaXN0VmlldyIsIkJhbmtHcm91cF9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVhdGVfUG9zdGluZyIsIk9yaWdpbmF0b3JfRXhwb3J0VGltZXNfVmlldyIsIkJhbmtfQXBwcm92YWxfQ29uZmlndXJhdGlvbiIsIkJlbmVmaWNpYXJ5X0xpc3RWaWV3IiwiQ3JlZGl0b3JNYW5kYXRlX0VkaXRBY2NvdW50RGV0YWlscyIsIkZNX0NUX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JfVU1SX0NvbmZpZ3VyYXRpb24iLCJDbGllbnRfTGFuZ19FZGl0IiwiQ3JlZGl0b3JfRmlsZV9VcGxvYWQiLCJDb2xsZWN0aW5nQWNjb3VudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1ZpZXdIaXN0b3J5IiwiQmFua19TY2hlbWVfVmlldyIsIlBheW1lbnRfSW5pdGlhdGlvbl9TZXJ2aWNlX1Byb3ZpZGVyIiwiQ3JlZGl0b3JNYW5kYXRlX0FjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1N1c3BlbmQiLCJDcmVkaXRvclNjaGVtZV9MaXN0VmlldyIsIkNyZWRpdG9yX1dTX1VzZXJfTGlzdFZpZXdBZGRFZGl0IiwiTnVhcGF5X0FwcF9WaWV3X0FjY291bnQiLCJQcm9jZXNzX0luc3RhbnRDcmVkaXRUcmFuc2Zlcl9XZWJob29rcyIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfUmVtb3ZlIiwiQ3JlZGl0b3JfU2VjdXJpdHlfRWRpdCIsIkNyZWRpdG9yTWFuZGF0ZV9SZXN1Ym1pdCIsIkJhbmtHcm91cF9VcGRhdGUiLCJDcmVkaXRvcl9Vc2VyX0FkZCIsIkNTTV9BZGRVcGRhdGUiLCJDcmVkaXRvclNjaGVtZV9BZGQiLCJIb2xkaW5nQWNjb3VudF9MaXN0VmlldyIsIkZpbmFuY2lhbEluc3RpdHV0aW9uX0xpc3RWaWV3QWRkRWRpdCIsIkNsYWltX0VkaXRDYW5jZWwiLCJEZWJ0b3JNYW5kYXRlX0FkZEVkaXQiLCJDbGllbnRfQmlsbGluZ0NoYXJnZXNfQ29uZmlndXJhdGlvbiIsIkNyZWRpdG9yU2NoZW1lX09wdGlvbnNfRWRpdCIsIkRpcmVjdERlYml0X0VkaXQiLCJGTV9ERF9GaWxlX0xlZ2FjeV9TZWFyY2giLCJGTV9ERF9GaWxlX1ZpZXciLCJDbGFpbV9BZGRFZGl0IiwiRk1fVHJhbnNhY3Rpb25fUmV2ZXJzZSIsIkZNX0REX1NlYXJjaCIsIkJhbmtfVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX0NvbnRyYWN0X0FkZEVkaXQiLCJGTV9DVF9GaWxlX0V4cG9ydCIsIkRlYnRvckFjY291bnRfQmxvY2tBY3RpdmF0ZSIsIkNsaWVudF9WaWV3IiwiQ3VzdG9tZXJfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0xpc3RBY2NvdW50IiwiQ3JlZGl0VHJhbnNmZXJfUmVjYWxsIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9MaXN0IiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRfRXhwb3J0IiwiQWRtaW5fVXNlcl9MaXN0IiwiQmFua19CaWxsaW5nQ2hhcmdlc19Db25maWd1cmF0aW9uIiwiQmFua0dyb3VwX1NjaGVtZUxpbWl0c19WaWV3IiwiRGlyZWN0RGViaXRfVW5wYWlkTGlzdFZpZXciLCJQdWJsaWMiLCJBZG1pbl9Vc2VyX1ZpZXciLCJGTV9CdWxrX1NlYXJjaCIsIkJlbmVmaWNpYXJ5X0xpc3RFZGl0IiwiRk1fRERfRmlsZV9Eb3dubG9hZCIsIkludm9rZV9TRFMiLCJDcmVkaXRvck1hbmRhdGVfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9DYW5jZWwiLCJDdXN0b21lcl9BZGQiLCJDb250YWN0c19FZGl0IiwiRk1fRERfRmlsZV9VcGxvYWQiLCJDcmVkaXRvclNjaGVtZV9BY2NvdW50X0FkZEVkaXQiLCJCYW5rX0V4cG9ydFRpbWVzX0VkaXQiLCJCYW5rR3JvdXBfU2VjdXJpdHlfVmlldyIsIkNsaWVudF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JTY2hlbWVfT3B0aW9uc19WaWV3IiwiQ3JlZGl0b3JMb2dvX0FkZCIsIkZNX0JhdGNoX1NlYXJjaCIsIkJhbmtfVXNlcl9WaWV3IiwiRGlyZWN0RGViaXRfUmV2b2tlIiwiQWRtaW5fVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1JlYWN0aXZhdGUiLCJGTV9ERF9GaWxlX1BhaW5fU2VhcmNoIiwiQmFua0dyb3VwX0FkZCIsIk51YXBheV9BcHBfQWNjb3VudCIsIkZNX1BhaW4yX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JNYW5kYXRlX0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfQWRkIiwiRGlyZWN0RGViaXRfQ2FuY2VsIiwiQ3JlZGl0b3JTY2hlbWVfVU1SX0NvbmZpZ3VyYXRpb24iLCJCYW5rX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JNYW5kYXRlX0ltYWdlVXBsb2FkIiwiQmFua0dyb3VwX1ZpZXciLCJCYW5rX0FwcHJvdmFsX1ZpZXdlciJdLCJqdGkiOiIzZmU0MGJlNC04MTM5LTRiY2MtYTZmYy05ZmM2ZGY5MjdiMzEiLCJjbGllbnRfaWQiOiJvcmlnaXhfZ2tfdXNlciJ9.lAR5VFVcLaWNTdk43pbsk3bs3jOqWdedOi9RsGDYsNNl94yvHOh09wgzp822V2SnF_Ca4O9f_-Agn1iACKO71Gq9u2kgfpZGE03xURZXlzfmkZXQrOw7JvSlBQ_QeSe5xhhquHvIvYk8bH8Zg114J-BobaiKKf66vAgj8jkevg_sJah0kLecxNpVey33zSLIfzo3xB-Gq9l_qkkU37TGmOrykUYGF9YLLwQ2wnHu7jPzdL5WmU6sFW3bzDsGVztWRzCrkltCPcW42LvHBnWDWK1lCOjPqSW8nRKlZfKgRfmvQxBG5DYxEt14tPqAvEofYWcDKgdS_xZa4ELytZsuQQ\",\n  \"tokenType\": \"BEARER\",\n  \"accessType\": \"CR\",\n  \"expityTime\": 1545062272000,\n  \"scopes\": [\n   \"openbanking_pisp\",\n   \"bankadmin\",\n   \"admin\"\n  ],\n  \"ipFiltering\": true,\n  \"requestedOrganisation\": \"ybo8zd8j2q\",\n  \"requestingOrganisation\": \"6bee3razby\",\n  \"status\": \"ACTIVE\",\n  \"createdTimestamp\": 1544975872000,\n  \"revokedTimestamp\": null,\n  \"links\": [\n   {\n    \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n    \"resourceType\": \"revoketoken\",\n    \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31/revoke\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "banks",
					"item": [
						{
							"name": "Retrieve Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1409bb12-f9c8-4769-ad1e-bee9d7d7221e",
										"exec": [
											"pm.environment.set(\"bankId\", JSON.parse(responseBody).data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrltpp}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=GBP",
									"host": [
										"{{baseUrltpp}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										},
										{
											"key": "supportedcurrencies",
											"value": "GBP"
										}
									]
								},
								"description": "Get Supported Banks On This TPP"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page  is invalid\",\n  \"field\": \"page\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/banks\",\n \"data\": [\n  {\n   \"uri\": \"/banks/8ow24y2pdx\",\n   \"name\": \"Nuapay\",\n   \"logo\": \"https://www.nuapay.com/wp-content/uploads/2018/04/nuapay.svg\",\n   \"supportedCurrencies\": [\n    \"GBP\",\n    \"EUR\"\n   ],\n   \"country\": \"GB\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4d81775e-110c-4438-a865-9143ec01c990",
										"exec": [
											"function randomString(length) {\r",
											"return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"\r",
											"pm.environment.set(\"endToEndIdentification\", randomString (31));\r",
											"pm.environment.set(\"reference\", randomString (18));\r",
											"pm.environment.set(\"Idemp\",randomString(12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cb235765-2c8a-4f31-b287-8d22a107603b",
										"exec": [
											"pm.environment.set(\"paymentId\", JSON.parse(responseBody).data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{Idemp}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"99.99\",\r\n    \"countryCode\": \"GB\",\r\n    \"currency\": \"GBP\",\r\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\r\n    \"language\": \"en\",\r\n    \"email\": \"client@example.com\",\r\n    \"orderDetails\": {\r\n        \"items\": [\r\n            {\r\n                \"name\": \"Blue Jeans\",\r\n                \"description\": \"Wrangler Blue Jeans\",\r\n                \"quantity\": 1,\r\n                \"amount\": 89.99\r\n            },\r\n            {\r\n                \"name\": \"Shirt\",\r\n                \"description\": \"Wrangler Shirt\",\r\n                \"quantity\": 1,\r\n                \"amount\": 10\r\n            }\r\n        ]\r\n    },\r\n    \"integrationType\": \"SELF_HOSTED\",\r\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\r\n    \"bankId\": \"{{bankId}}\",\r\n    \"remittanceInformation\": {\r\n        \"reference\": null,\r\n        \"unstructured\": \"Wrangler Combo\"\r\n    },\r\n    \"debtorAccount\": {\r\n        \"identification\": \"60161331926819\",\r\n        \"schemeName\": \"SortCodeAccountNumber\",\r\n        \"name\": \"Joe Bloggs\",\r\n        \"secondaryIdentification\": null\r\n    },\r\n    \"risk\": {\r\n        \"paymentContextCode\": null,\r\n        \"merchantCategoryCode\": null,\r\n        \"merchantCustomerIdentification\": null\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseUrltpp}}/payments",
									"host": [
										"{{baseUrltpp}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "Create a payment request POST endpoint"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"id\": \"ybo8zayk2q\",\n  \"amount\": 99.99,\n  \"countryCode\": \"GB\",\n  \"currency\": \"GBP\",\n  \"email\": \"client@example.com\",\n  \"language\": \"en\",\n  \"remittanceInformation\": {\n   \"unstructured\": \"The Remittance Information\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"30.00\"\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"-5.00\"\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"125.00\"\n    }\n   ]\n  },\n  \"integrationType\": \"SELF_HOSTED\",\n  \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n  \"bankId\": \"ybo8zd8j2q\",\n  \"aspspAuthUrl\": \"http://sent-test-spr6.sent.local:8080/bank/authorize?response_type=code+id_token&scope=openid+payments&client_id=test&redirect_uri=http%3A%2F%2Fsent-test-spr6%3A8080%2Ftpp%2Fpayment-requests%2Foauth&state=0f58db32-52a3-4878-b8ee-0ad7953db871&nonce=0e74d09e-a1fa-444b-8782-d5dc2992b5fd&request=eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJtYXhfYWdlIjo4NjQwMCwiYXVkIjoiaHR0cHM6XC9cL2FwaS5hbHBoYW5iYW5rLmNvbSIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiaXNzIjoidGVzdCIsImNsYWltcyI6eyJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJ1cm46YWxwaGFiYW5rOmludGVudDpkMjhjNzM3ZC05MTk0LTQwYjMtOTY0Yy1mNDg0NzQ2YWI3Y2QiLCJlc3NlbnRpYWwiOnRydWV9fSwiaWRfdG9rZW4iOnsib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoidXJuOmFscGhhYmFuazppbnRlbnQ6ZDI4YzczN2QtOTE5NC00MGIzLTk2NGMtZjQ4NDc0NmFiN2NkIiwiZXNzZW50aWFsIjp0cnVlfSwiYWNyIjp7ImVzc2VudGlhbCI6dHJ1ZSwidmFsdWVzIjpbInVybjpvcGVuYmFua2luZzpwc2QyOnNjYSIsInVybjpvcGVuYmFua2luZzpwc2QyOmNhIl19fX0sInJlc3BvbnNlX3R5cGUiOiJjb2RlIGlkX3Rva2VuIiwicmVkaXJlY3RfdXJpIjoiaHR0cDpcL1wvc2VudC10ZXN0LXNwcjY6ODA4MFwvdHBwXC9wYXltZW50LXJlcXVlc3RzXC9vYXV0aCIsInN0YXRlIjoiMGY1OGRiMzItNTJhMy00ODc4LWI4ZWUtMGFkNzk1M2RiODcxIiwiaWF0IjoxNTQ0NTMzNjkwLCJub25jZSI6IjBlNzRkMDllLWExZmEtNDQ0Yi04NzgyLWQ1ZGMyOTkyYjVmZCIsImNsaWVudF9pZCI6InRlc3QifQ.kEONxzdQRLABwBR0VFfV5yCmknVVMuE_aDj0aaV6gDfQib5175sFB1pUuB4o_n6gdOm8qt3VFQEIvPbcNIGoK8noPXm9u5GK0Mqms7YqaMxYW8S_rGDCtEKNXyyjbFQgkgR9Dnq3rudf5T6YDSxYqtnL7IOh6bbO1jbNgi3w2CYt9G84a6Z2sM8T-LrHaGE_bAZGyS0Tu2ihD19iZ6CnsEtD-8o2_dtSfTI8VzcrUE2e4w-Am-f4cvXs0YZIEOH-nY_x4elp6GKzJf9Lkm6UU7xX98DhQmT-kYz66PNuCorjEDTXYZYZZBcE0eCwNO-OCtH_q5nK2WAnh9UeT__xGg\",\n  \"status\": \"PENDING_APPROVAL\",\n  \"debtorAccount\": {\n   \"identification\": \"GB29NWBK60161331926819\",\n   \"schemeName\": \"IBAN\"\n  }\n }\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "Retrieve Payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrltpp}}/payments/:paymentId",
									"host": [
										"{{baseUrltpp}}"
									],
									"path": [
										"payments",
										":paymentId"
									],
									"variable": [
										{
											"key": "paymentId",
											"value": "{{paymentId}}",
											"description": "The ID of the payment for which you want to retrieve details"
										}
									]
								},
								"description": "GET Payment details endpoint"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"id\": \"ybo8zayk2q\",\n  \"amount\": 99.99,\n  \"countryCode\": \"GB\",\n  \"currency\": \"GBP\",\n  \"email\": \"client@example.com\",\n  \"language\": \"en\",\n  \"remittanceInformation\": {\n   \"unstructured\": \"The Remittance Information\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"30.00\"\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"-5.00\"\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"125.00\"\n    }\n   ]\n  },\n  \"integrationType\": \"CHECKOUT\",\n  \"merchantPostAuthUrl\": null,\n  \"bankId\": null,\n  \"aspspAuthUrl\": null,\n  \"status\": \"PENDING_APPROVAL\",\n  \"debtorAccount\": {\n   \"identification\": \"GB29NWBK60161331926819\",\n   \"schemeName\": \"IBAN\"\n  }\n }\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "Reverse a Payment POST endpoint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/payments/:paymentId/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":paymentId",
										"reverse"
									],
									"variable": [
										{
											"key": "paymentId",
											"value": "{{paymentId}}",
											"description": "The ID of the payment to be reversed."
										}
									]
								},
								"description": "Reverse a Payment POST endpoint"
							},
							"response": [
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Payment successfully reversed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"reference\": \"reference\",\n  \"status\": \"REVERSED\",\n  \"amount\": 99.99,\n  \"currency\": \"GBP\",\n  \"countryCode\": \"GB\",\n  \"language\": \"en\",\n  \"email\": \"client@example.com\"\n }\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Partner Checkout Flow Copy",
			"item": [
				{
					"name": "organisations",
					"item": [
						{
							"name": "List Organisations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4bee8a2-49f3-4a3a-b842-91a4c3a5b963",
										"exec": [
											"pm.environment.set(\"merchantId\", JSON.parse(responseBody).data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{partnerApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organisations"
									],
									"query": [
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										}
									]
								},
								"description": "The endpoint allows to list Organisations in requesting Organisation hierarchy"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"40000\",\n \"returnDescription\": \"Input validation errors\",\n \"details\": [\n  {\n   \"code\": \"50003\",\n   \"field\": \"pagenumber\",\n   \"description\": \"Page Number is invalid\",\n   \"resourceUri\": null\n  },\n  {\n   \"code\": \"50005\",\n   \"field\": \"pagesize\",\n   \"description\": \"Page Size is invalid\",\n   \"resourceUri\": null\n  }\n ]\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"40000\",\n \"returnDescription\": \"Input validation errors\",\n \"details\": [\n  {\n   \"code\": \"50004\",\n   \"field\": \"pagesize\",\n   \"description\": \"Max page size is exceeded\",\n   \"resourceUri\": null\n  }\n ]\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/organisations\",\n \"data\": [\n  {\n   \"id\": \"j29p3kpabx\",\n   \"uri\": \"/organisations/j29p3kpabx\",\n   \"name\": \"Originator Name\",\n   \"countryOfRegistration\": \"IE\",\n   \"code\": \"ORNA\",\n   \"registeredNumber\": \"32342\",\n   \"vatNumber\": null,\n   \"language\": \"en\",\n   \"address\": {\n    \"line1\": \"Address\",\n    \"line2\": null,\n    \"postCode\": null,\n    \"state\": null,\n    \"town\": \"Town\",\n    \"country\": \"IE\"\n   },\n   \"contact\": {\n    \"firstName\": \"First Name\",\n    \"lastName\": \"Last Name\",\n    \"telephone\": \"21242124\",\n    \"mobile\": null,\n    \"fax\": null,\n    \"email1\": \"email@example.com\",\n    \"email2\": null,\n    \"title\": \"Mr\",\n    \"position\": \"None\",\n    \"contactType\": [\n     \"PRIMARY\"\n    ],\n    \"emailNotification\": false\n   },\n   \"links\": []\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 20,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								}
							]
						},
						{
							"name": "Request Access Token for Organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29ad1161-fe6e-4d94-abf6-94329d54ba06",
										"exec": [
											"pm.environment.set(\"bearerToken\", JSON.parse(responseBody).data.accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{partnerApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"bankadmin\",\n        \"openbanking_pisp\",\n        \"admin\"\n    ],\n    \"expiresIn\": 31556926\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organisations",
										":encodedOrganisationId",
										"tokens"
									],
									"variable": [
										{
											"key": "encodedOrganisationId",
											"value": "{{merchantId}}",
											"description": "Encoded Organisation Id returned by List Organisations endpoint."
										}
									]
								},
								"description": "This endpoing allows an organisation to exchange an API Key for an OAuth Access Token"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"organisations/ybo8zd8j2q/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n \"data\": {\n  \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"uri\": \"organisations/ybo8zd8j2q/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpcF9maWx0ZXJpbmciOmZhbHNlLCJhdWQiOlsiZ2siLCJ3ZWJob29rcyIsInBpIiwicm1zIiwiaW5zdGFudCJdLCJvcmlnaW5hdG9yX29yZ19pZCI6ImoyOXAza3BhYngiLCJ1c2VyX2lkIjoid3FqMjlubXhuZSIsInVzZXJfbmFtZSI6InN5c3RlbSIsIm9yZ19pZCI6IiIsInNjb3BlIjpbInVzZXJkaXJlY3QiXSwiZXhwIjoxNTQ0NTM5MzQ3LCJhdXRob3JpdGllcyI6WyJGTV9CdWxrX0NhbmNlbCIsIkJhbmtfVXBkYXRlIiwiSW5zdGFudF9QYXltZW50c19DcmVhdGVfUmVzZXJ2YXRpb24iLCJDcmVkaXRUcmFuc2Zlcl9SZWplY3QiLCJHTE9CQUxfU0VBUkNIIiwiU2NoZW1lX0FkZFVwZGF0ZSIsIkJhbmtHcm91cF9MaXN0Iiwid2ViaG9va19hZG1pbiIsIkN1c3RvbWVyX0VkaXQiLCJCYW5rX0FwcHJvdmFsX0VkaXRvciIsIkFkbWluX1VzZXJfQWN0aXZhdGUiLCJCYW5rX1ZpZXciLCJDcmVkaXRvckFjY291bnRfQWRkIiwiQ3JlZGl0b3JBY2NvdW50X0xpc3RWaWV3IiwiRk1fRUJBX1NlYXJjaCIsIkJhbmtfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0VkaXRTZXR0aW5ncyIsIkNyZWRpdG9yX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX1NlYXJjaCIsIkFQUFJPVkFMX1ZJRVdFUiIsIk51YXBheV9BcHBfTGlzdF9BY2NvdW50cyIsIkJlbmVmaWNpYXJ5X0FkZCIsIkNyZWRpdG9yX1NlY3VyaXR5X1ZpZXciLCJCaWNfUmVhY2hhYmlsaXR5X1ZhbGlkYXRpb24iLCJDcmVkaXRvcl9Db250YWN0X0FkZEVkaXQiLCJCYW5rX1VzZXJfQWN0aXZhdGUiLCJGTV9NYW5kYXRlX1NlYXJjaCIsIkZNX0REX1JfVHJhbnNhY3Rpb25fVmlldyIsIkNvbnRhY3RzX0xpc3RWaWV3QWRkRWRpdCIsIkRlYnRvck1hbmRhdGVfQmxvY2tBY3RpdmF0ZSIsIk51YXBheV9BcHBfTGlzdF9UcmFuc2FjdGlvbnMiLCJCYW5rX1VzZXJfRWRpdCIsIkZNX01hbmRhdGVfRmlsZV9VcGxvYWQiLCJPcmdVbml0X1ZpZXciLCJCYW5rR3JvdXBfV1NfVXNlcl9MaXN0Vmlld0FkZEVkaXQiLCJDcmVkaXRvck1hbmRhdGVfRERfU2VhcmNoIiwiQ2xpZW50X0xhbmdfVmlldyIsIkZNX0JhdGNoX1JldmVyc2UiLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWN0aXZhdGUiLCJPcmdVbml0X0xpc3QiLCJGTV9ERF9WaWV3IiwiQmFua0dyb3VwX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9Vc2VyX1ZpZXciLCJWYWxpZGF0ZV9BY2NvdW50IiwiQ2xhaW1fTGlzdFZpZXciLCJDbGllbnRfTGlzdCIsIkNyZWRpdG9yQWNjb3VudF9FZGl0IiwiQU1MX1NlcnZpY2UiLCJDcmVkaXRvcl9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVkaXRvck1hbmRhdGVfTm9FZGl0QWNjb3VudERldGFpbHMiLCJGTV9CdWxrX1Jldm9rZSIsIkNyZWRpdG9yTWFuZGF0ZV9FZGl0IiwiQ2xpZW50X0FwcHJvdmFsX0VkaXRvciIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfTGlzdFZpZXciLCJCZW5lZmljaWFyeUFjY291bnRfTGlzdFZpZXdBZGRFZGl0IiwiQ3JlZGl0b3JfQ29udGFjdF9MaXN0VmlldyIsIlJvb3RQYXltZW50U2NoZW1lX0xpc3RWaWV3QWRkRWRpdCIsIkFQUFJPVkFMX0VESVRPUiIsIk9yZ1VuaXRfQWRkVXBkYXRlIiwiQmFua0dyb3VwX0FwcHJvdmFsX0VkaXRvciIsIkZNX0JhdGNoX0NhbmNlbCIsIkZNX0REX0xpc3RCYXRjaGVzIiwiUm9sZV9Bc3NpZ25tZW50IiwiQ3JlZGl0VHJhbnNmZXJfQWRkIiwiQ2xpZW50X0FkZCIsIlNjaGVtZV9MaW1pdHNfVmlldyIsIkZNX0JhdGNoX1ZpZXciLCJGTV9UcmFuc2FjdGlvbl9SZXZva2UiLCJNYW5kYXRlQ29sbGVjdGlvbl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfRXhwb3J0IiwiQmFua19FeHBvcnRUaW1lc19WaWV3IiwiQ3JlZGl0b3JTY2hlbWVfQ29udGFjdF9SZW1vdmUiLCJGTV9QYWluMl9GaWxlX0V4cG9ydCIsIkNTTV9MaXN0IiwiQ1NNX1ZpZXciLCJBZ2VuY3lCYW5rX1ZpZXciLCJDbGllbnRfRWRpdExpbWl0cyIsIkZNX0J1bGtfUmV2ZXJzZSIsIkJhbmtfVXNlcl9BZGQiLCJDcmVkaXRvck1hbmRhdGVfQ2FuY2VsIiwiQWdlbmN5QmFua19MaXN0IiwiRk1fQmF0Y2hfUmV2b2tlIiwiU2VhcmNoX1Bvc3RpbmciLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9BZGQiLCJCYW5rR3JvdXBfQXBwcm92YWxfVmlld2VyIiwiQmFua0dyb3VwX1NlY3VyaXR5X0VkaXQiLCJSb2xlX0FkZEVkaXQiLCJPcmlnaW5hdG9yX0V4cG9ydFRpbWVzX0VkaXQiLCJEZWJ0b3JBY2NvdW50X0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfTGlzdCIsIkFkbWluX1VzZXJfQWRkIiwiUm9sZV9MaXN0VmlldyIsIkZNX0NUX1NlYXJjaCIsIkNyZWRpdG9yX1VzZXJfTGlzdCIsIkNyZWRpdFRyYW5zZmVyX0VkaXQiLCJBZG1pbl9Vc2VyX0VkaXQiLCJGTV9NYW5kYXRlX0ZpbGVfU2VhcmNoIiwiQmFua0dyb3VwX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX0NhbmNlbCIsIkNyZWRpdG9yX1VzZXJfQWN0aXZhdGUiLCJDcmVkaXRvcl9Vc2VyX1ZpZXciLCJDcmVkaXRUcmFuc2Zlcl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfUmV2b2tlIiwiQ2xpZW50X0VkaXQiLCJTY2hlbWVfTGlzdCIsIkRpcmVjdERlYml0X0xpc3RWaWV3IiwiU2NoZW1lX1ZpZXciLCJCYW5rX0FkZCIsIkFnZW5jeUJhbmtfQWRkVXBkYXRlIiwiQ2xpZW50X0FwcHJvdmFsX1ZpZXdlciIsIlZpZXdfT3JpZ2luYXRvcl9SZXBvcnRzIiwiRGVidG9yTWFuZGF0ZV9MaXN0VmlldyIsIkJhbmtHcm91cF9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVhdGVfUG9zdGluZyIsIk9yaWdpbmF0b3JfRXhwb3J0VGltZXNfVmlldyIsIkJhbmtfQXBwcm92YWxfQ29uZmlndXJhdGlvbiIsIkJlbmVmaWNpYXJ5X0xpc3RWaWV3IiwiQ3JlZGl0b3JNYW5kYXRlX0VkaXRBY2NvdW50RGV0YWlscyIsIkZNX0NUX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JfVU1SX0NvbmZpZ3VyYXRpb24iLCJDbGllbnRfTGFuZ19FZGl0IiwiQ3JlZGl0b3JfRmlsZV9VcGxvYWQiLCJDb2xsZWN0aW5nQWNjb3VudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1ZpZXdIaXN0b3J5IiwiQmFua19TY2hlbWVfVmlldyIsIlBheW1lbnRfSW5pdGlhdGlvbl9TZXJ2aWNlX1Byb3ZpZGVyIiwiQ3JlZGl0b3JNYW5kYXRlX0FjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1N1c3BlbmQiLCJDcmVkaXRvclNjaGVtZV9MaXN0VmlldyIsIkNyZWRpdG9yX1dTX1VzZXJfTGlzdFZpZXdBZGRFZGl0IiwiTnVhcGF5X0FwcF9WaWV3X0FjY291bnQiLCJQcm9jZXNzX0luc3RhbnRDcmVkaXRUcmFuc2Zlcl9XZWJob29rcyIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfUmVtb3ZlIiwiQ3JlZGl0b3JfU2VjdXJpdHlfRWRpdCIsIkNyZWRpdG9yTWFuZGF0ZV9SZXN1Ym1pdCIsIkJhbmtHcm91cF9VcGRhdGUiLCJDcmVkaXRvcl9Vc2VyX0FkZCIsIkNTTV9BZGRVcGRhdGUiLCJDcmVkaXRvclNjaGVtZV9BZGQiLCJIb2xkaW5nQWNjb3VudF9MaXN0VmlldyIsIkZpbmFuY2lhbEluc3RpdHV0aW9uX0xpc3RWaWV3QWRkRWRpdCIsIkNsYWltX0VkaXRDYW5jZWwiLCJEZWJ0b3JNYW5kYXRlX0FkZEVkaXQiLCJDbGllbnRfQmlsbGluZ0NoYXJnZXNfQ29uZmlndXJhdGlvbiIsIkNyZWRpdG9yU2NoZW1lX09wdGlvbnNfRWRpdCIsIkRpcmVjdERlYml0X0VkaXQiLCJGTV9ERF9GaWxlX0xlZ2FjeV9TZWFyY2giLCJGTV9ERF9GaWxlX1ZpZXciLCJDbGFpbV9BZGRFZGl0IiwiRk1fVHJhbnNhY3Rpb25fUmV2ZXJzZSIsIkZNX0REX1NlYXJjaCIsIkJhbmtfVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX0NvbnRyYWN0X0FkZEVkaXQiLCJGTV9DVF9GaWxlX0V4cG9ydCIsIkRlYnRvckFjY291bnRfQmxvY2tBY3RpdmF0ZSIsIkNsaWVudF9WaWV3IiwiQ3VzdG9tZXJfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0xpc3RBY2NvdW50IiwiQ3JlZGl0VHJhbnNmZXJfUmVjYWxsIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9MaXN0IiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRfRXhwb3J0IiwiQWRtaW5fVXNlcl9MaXN0IiwiQmFua19CaWxsaW5nQ2hhcmdlc19Db25maWd1cmF0aW9uIiwiQmFua0dyb3VwX1NjaGVtZUxpbWl0c19WaWV3IiwiRGlyZWN0RGViaXRfVW5wYWlkTGlzdFZpZXciLCJQdWJsaWMiLCJBZG1pbl9Vc2VyX1ZpZXciLCJGTV9CdWxrX1NlYXJjaCIsIkJlbmVmaWNpYXJ5X0xpc3RFZGl0IiwiRk1fRERfRmlsZV9Eb3dubG9hZCIsIkludm9rZV9TRFMiLCJDcmVkaXRvck1hbmRhdGVfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9DYW5jZWwiLCJDdXN0b21lcl9BZGQiLCJDb250YWN0c19FZGl0IiwiRk1fRERfRmlsZV9VcGxvYWQiLCJDcmVkaXRvclNjaGVtZV9BY2NvdW50X0FkZEVkaXQiLCJCYW5rX0V4cG9ydFRpbWVzX0VkaXQiLCJCYW5rR3JvdXBfU2VjdXJpdHlfVmlldyIsIkNsaWVudF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JTY2hlbWVfT3B0aW9uc19WaWV3IiwiQ3JlZGl0b3JMb2dvX0FkZCIsIkZNX0JhdGNoX1NlYXJjaCIsIkJhbmtfVXNlcl9WaWV3IiwiRGlyZWN0RGViaXRfUmV2b2tlIiwiQWRtaW5fVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1JlYWN0aXZhdGUiLCJGTV9ERF9GaWxlX1BhaW5fU2VhcmNoIiwiQmFua0dyb3VwX0FkZCIsIk51YXBheV9BcHBfQWNjb3VudCIsIkZNX1BhaW4yX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JNYW5kYXRlX0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfQWRkIiwiRGlyZWN0RGViaXRfQ2FuY2VsIiwiQ3JlZGl0b3JTY2hlbWVfVU1SX0NvbmZpZ3VyYXRpb24iLCJCYW5rX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JNYW5kYXRlX0ltYWdlVXBsb2FkIiwiQmFua0dyb3VwX1ZpZXciLCJCYW5rX0FwcHJvdmFsX1ZpZXdlciJdLCJqdGkiOiIzZmU0MGJlNC04MTM5LTRiY2MtYTZmYy05ZmM2ZGY5MjdiMzEiLCJjbGllbnRfaWQiOiJvcmlnaXhfZ2tfdXNlciJ9.lAR5VFVcLaWNTdk43pbsk3bs3jOqWdedOi9RsGDYsNNl94yvHOh09wgzp822V2SnF_Ca4O9f_-Agn1iACKO71Gq9u2kgfpZGE03xURZXlzfmkZXQrOw7JvSlBQ_QeSe5xhhquHvIvYk8bH8Zg114J-BobaiKKf66vAgj8jkevg_sJah0kLecxNpVey33zSLIfzo3xB-Gq9l_qkkU37TGmOrykUYGF9YLLwQ2wnHu7jPzdL5WmU6sFW3bzDsGVztWRzCrkltCPcW42LvHBnWDWK1lCOjPqSW8nRKlZfKgRfmvQxBG5DYxEt14tPqAvEofYWcDKgdS_xZa4ELytZsuQQ\",\n  \"tokenType\": \"BEARER\",\n  \"accessType\": \"CR\",\n  \"expityTime\": 1545062272000,\n  \"scopes\": [\n   \"openbanking_pisp\",\n   \"bankadmin\",\n   \"admin\"\n  ],\n  \"ipFiltering\": true,\n  \"requestedOrganisation\": \"ybo8zd8j2q\",\n  \"requestingOrganisation\": \"6bee3razby\",\n  \"status\": \"ACTIVE\",\n  \"createdTimestamp\": 1544975872000,\n  \"revokedTimestamp\": null,\n  \"links\": [\n   {\n    \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n    \"resourceType\": \"revoketoken\",\n    \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31/revoke\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organisations/:encodedOrganisationId/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organisations",
												":encodedOrganisationId",
												"tokens"
											],
											"variable": [
												{
													"key": "encodedOrganisationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4d81775e-110c-4438-a865-9143ec01c990",
										"exec": [
											"function randomString(length) {\r",
											"return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"\r",
											"pm.environment.set(\"endToEndIdentification\", randomString (31));\r",
											"pm.environment.set(\"reference\", randomString (18));\r",
											"pm.environment.set(\"Idemp\",randomString(12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cb235765-2c8a-4f31-b287-8d22a107603b",
										"exec": [
											"pm.environment.set(\"paymentId\", JSON.parse(responseBody).data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{Idemp}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"99.99\",\r\n    \"countryCode\": \"GB\",\r\n    \"currency\": \"GBP\",\r\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\r\n    \"language\": \"en\",\r\n    \"email\": \"client@example.com\",\r\n    \"orderDetails\": {\r\n        \"items\": [\r\n            {\r\n                \"name\": \"Blue Jeans\",\r\n                \"description\": \"Wrangler Blue Jeans\",\r\n                \"quantity\": 1,\r\n                \"amount\": 89.99\r\n            },\r\n            {\r\n                \"name\": \"Shirt\",\r\n                \"description\": \"Wrangler Shirt\",\r\n                \"quantity\": 1,\r\n                \"amount\": 10\r\n            }\r\n        ]\r\n    },\r\n    \"integrationType\": \"CHECKOUT\",\r\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\r\n    \"bankId\": null,\r\n    \"remittanceInformation\": {\r\n        \"reference\": null,\r\n        \"unstructured\": \"Wrangler Combo\"\r\n    },\r\n    \"debtorAccount\": {\r\n        \"identification\": \"60161331926819\",\r\n        \"schemeName\": \"SortCodeAccountNumber\",\r\n        \"name\": \"Joe Bloggs\",\r\n        \"secondaryIdentification\": null\r\n    },\r\n    \"risk\": {\r\n        \"paymentContextCode\": null,\r\n        \"merchantCategoryCode\": null,\r\n        \"merchantCustomerIdentification\": null\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseUrltpp}}/payments",
									"host": [
										"{{baseUrltpp}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "Create a payment request POST endpoint"
							},
							"response": [
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											},
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"id\": \"ybo8zayk2q\",\n  \"amount\": 99.99,\n  \"countryCode\": \"GB\",\n  \"currency\": \"GBP\",\n  \"email\": \"client@example.com\",\n  \"language\": \"en\",\n  \"remittanceInformation\": {\n   \"unstructured\": \"The Remittance Information\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"30.00\"\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"-5.00\"\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"125.00\"\n    }\n   ]\n  },\n  \"integrationType\": \"SELF_HOSTED\",\n  \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n  \"bankId\": \"ybo8zd8j2q\",\n  \"aspspAuthUrl\": \"http://sent-test-spr6.sent.local:8080/bank/authorize?response_type=code+id_token&scope=openid+payments&client_id=test&redirect_uri=http%3A%2F%2Fsent-test-spr6%3A8080%2Ftpp%2Fpayment-requests%2Foauth&state=0f58db32-52a3-4878-b8ee-0ad7953db871&nonce=0e74d09e-a1fa-444b-8782-d5dc2992b5fd&request=eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJtYXhfYWdlIjo4NjQwMCwiYXVkIjoiaHR0cHM6XC9cL2FwaS5hbHBoYW5iYW5rLmNvbSIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiaXNzIjoidGVzdCIsImNsYWltcyI6eyJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJ1cm46YWxwaGFiYW5rOmludGVudDpkMjhjNzM3ZC05MTk0LTQwYjMtOTY0Yy1mNDg0NzQ2YWI3Y2QiLCJlc3NlbnRpYWwiOnRydWV9fSwiaWRfdG9rZW4iOnsib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoidXJuOmFscGhhYmFuazppbnRlbnQ6ZDI4YzczN2QtOTE5NC00MGIzLTk2NGMtZjQ4NDc0NmFiN2NkIiwiZXNzZW50aWFsIjp0cnVlfSwiYWNyIjp7ImVzc2VudGlhbCI6dHJ1ZSwidmFsdWVzIjpbInVybjpvcGVuYmFua2luZzpwc2QyOnNjYSIsInVybjpvcGVuYmFua2luZzpwc2QyOmNhIl19fX0sInJlc3BvbnNlX3R5cGUiOiJjb2RlIGlkX3Rva2VuIiwicmVkaXJlY3RfdXJpIjoiaHR0cDpcL1wvc2VudC10ZXN0LXNwcjY6ODA4MFwvdHBwXC9wYXltZW50LXJlcXVlc3RzXC9vYXV0aCIsInN0YXRlIjoiMGY1OGRiMzItNTJhMy00ODc4LWI4ZWUtMGFkNzk1M2RiODcxIiwiaWF0IjoxNTQ0NTMzNjkwLCJub25jZSI6IjBlNzRkMDllLWExZmEtNDQ0Yi04NzgyLWQ1ZGMyOTkyYjVmZCIsImNsaWVudF9pZCI6InRlc3QifQ.kEONxzdQRLABwBR0VFfV5yCmknVVMuE_aDj0aaV6gDfQib5175sFB1pUuB4o_n6gdOm8qt3VFQEIvPbcNIGoK8noPXm9u5GK0Mqms7YqaMxYW8S_rGDCtEKNXyyjbFQgkgR9Dnq3rudf5T6YDSxYqtnL7IOh6bbO1jbNgi3w2CYt9G84a6Z2sM8T-LrHaGE_bAZGyS0Tu2ihD19iZ6CnsEtD-8o2_dtSfTI8VzcrUE2e4w-Am-f4cvXs0YZIEOH-nY_x4elp6GKzJf9Lkm6UU7xX98DhQmT-kYz66PNuCorjEDTXYZYZZBcE0eCwNO-OCtH_q5nK2WAnh9UeT__xGg\",\n  \"status\": \"PENDING_APPROVAL\",\n  \"debtorAccount\": {\n   \"identification\": \"GB29NWBK60161331926819\",\n   \"schemeName\": \"IBAN\"\n  }\n }\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification\",\n    \"remittanceInformation\": {\n        \"unstructured\": \"The Remittance Information\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"50.00\"\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": \"30.00\"\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"-5.00\"\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": \"125.00\"\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"ybo8zd8j2q\",\n    \"debtorAccount\": {\n        \"identification\": \"GB29NWBK60161331926819\",\n        \"schemeName\": \"IBAN\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "Retrieve Payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrltpp}}/payments/:paymentId",
									"host": [
										"{{baseUrltpp}}"
									],
									"path": [
										"payments",
										":paymentId"
									],
									"variable": [
										{
											"key": "paymentId",
											"value": "{{paymentId}}",
											"description": "The ID of the payment for which you want to retrieve details"
										}
									]
								},
								"description": "GET Payment details endpoint"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"id\": \"ybo8zayk2q\",\n  \"amount\": 99.99,\n  \"countryCode\": \"GB\",\n  \"currency\": \"GBP\",\n  \"email\": \"client@example.com\",\n  \"language\": \"en\",\n  \"remittanceInformation\": {\n   \"unstructured\": \"The Remittance Information\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"50.00\"\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": \"30.00\"\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"-5.00\"\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": \"125.00\"\n    }\n   ]\n  },\n  \"integrationType\": \"CHECKOUT\",\n  \"merchantPostAuthUrl\": null,\n  \"bankId\": null,\n  \"aspspAuthUrl\": null,\n  \"status\": \"PENDING_APPROVAL\",\n  \"debtorAccount\": {\n   \"identification\": \"GB29NWBK60161331926819\",\n   \"schemeName\": \"IBAN\"\n  }\n }\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "Reverse a Payment POST endpoint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/payments/:paymentId/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":paymentId",
										"reverse"
									],
									"variable": [
										{
											"key": "paymentId",
											"value": "{{paymentId}}",
											"description": "The ID of the payment to be reversed."
										}
									]
								},
								"description": "Reverse a Payment POST endpoint"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Payment successfully reversed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/ybo8zayk2q\",\n \"data\": {\n  \"reference\": \"reference\",\n  \"status\": \"REVERSED\",\n  \"amount\": 99.99,\n  \"currency\": \"GBP\",\n  \"countryCode\": \"GB\",\n  \"language\": \"en\",\n  \"email\": \"client@example.com\"\n }\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"remmitanceInfo\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:paymentId/reverse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":paymentId",
												"reverse"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4cfdeb99-860e-43f4-8b89-b577661e9cd8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f9bd80ba-8439-485f-9ab9-6030e3db98ed",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "22bfeb1a-342d-410c-8b27-cd6f786bcf5a",
			"key": "baseUrl",
			"value": "https://sandbox.nuapay.com",
			"type": "string"
		},
		{
			"id": "b1895e3d-cf3f-4023-9c80-fe3398ff3adb",
			"key": "partnerApiKey",
			"value": "9cad5319fd3873ea911bfd44c342f78d2ef7fd9ee402dc2f08198f80a350c2ec",
			"type": "string"
		},
		{
			"id": "56bdc782-05c4-406b-a104-69375e24bf20",
			"key": "baseUrltpp",
			"value": "https://sandbox.nuapay.com/tpp",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}